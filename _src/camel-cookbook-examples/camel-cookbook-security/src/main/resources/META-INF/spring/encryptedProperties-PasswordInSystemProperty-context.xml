<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) Scott Cranton and Jakub Korab
  ~ https://github.com/CamelCookbook
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

  <!-- define the Jasypt properties parser, with the master password used for decryption -->
  <bean id="jasypt" class="org.apache.camel.component.jasypt.JasyptPropertiesParser">
    <!--
     The password is mandatory, you can prefix it with
        sysenv: uses an environment variable, or
        sys: uses a JVM system property
     Both are a better option than hardcoding the master password in plain text
    -->
    <property name="password" value="sys:jasyptMasterPassword"/>
  </bean>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <propertyPlaceholder id="properties"
                         location="classpath:placeholder.properties"
                         propertiesParserRef="jasypt"/>
    <route>
      <from uri="{{start.endpoint}}"/>
      <setHeader headerName="dbPassword">
        <constant>{{database.password}}</constant>
      </setHeader>
      <log message="{{log.message}}"/>
      <to uri="{{end.endpoint}}"/>
    </route>
  </camelContext>

</beans>
