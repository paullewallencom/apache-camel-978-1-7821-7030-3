<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) Scott Cranton and Jakub Korab
  ~ https://github.com/CamelCookbook
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

  <import resource="embedded-db-context.xml"/>

  <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
    <property name="dataSource" ref="auditDataSource"/>
  </bean>

  <!-- this is an implementation of PlatformTransactionManager, Camel will look it up when a route is marked as transacted -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="auditDataSource"/>
  </bean>

  <bean id="illegalArgumentException" class="java.lang.IllegalArgumentException">
    <constructor-arg value="Exchange caused explosion"/>
  </bean>

  <bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
    <property name="transactionManager" ref="transactionManager"/>
    <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
  </bean>

  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
    <!-- do not take part in the outer transaction -->
    <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW"/>
  </bean>

  <bean id="jdbcIdempotentRepository" class="org.apache.camel.processor.idempotent.jdbc.JdbcMessageIdRepository">
    <constructor-arg ref="auditDataSource"/>
    <constructor-arg ref="transactionTemplate"/>
    <constructor-arg value="ws"/>
    <!-- processor name -->
  </bean>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="direct:transacted" id="main"/>
      <transacted ref="PROPAGATION_REQUIRED"/>
      <setHeader headerName="message">
        <simple>${body}</simple>
      </setHeader>
      <to uri="sql:insert into audit_log (message) values (:#message)"/>
      <enrich uri="direct:invokeWs"/>
      <to uri="mock:out"/>
    </route>

    <route>
      <from uri="direct:invokeWs" id="idempotentWs"/>
      <idempotentConsumer messageIdRepositoryRef="jdbcIdempotentRepository">
        <header>messageId</header>
        <to uri="mock:ws"/>
      </idempotentConsumer>
    </route>
  </camelContext>

</beans>
