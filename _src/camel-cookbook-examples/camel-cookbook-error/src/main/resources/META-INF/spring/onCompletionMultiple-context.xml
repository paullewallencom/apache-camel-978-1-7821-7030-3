<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (C) Scott Cranton and Jakub Korab
  ~ https://github.com/CamelCookbook
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

  <bean id="illegalArgumentException" class="java.lang.IllegalArgumentException">
    <constructor-arg value="Exchange caused explosion"/>
  </bean>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <onCompletion onCompleteOnly="true">
      <log message="global onCompletion triggered: ${threadName}"/>
      <to uri="mock:globalCompleted"/>
    </onCompletion>
    <onCompletion onFailureOnly="true">
      <log message="global onFailureOnly thread: ${threadName}"/>
      <to uri="mock:globalFailed"/>
    </onCompletion>

    <route>
      <from uri="direct:in"/>
      <onCompletion onCompleteOnly="true">
        <log message="onCompletion triggered: ${threadName}"/>
        <to uri="mock:completed"/>
      </onCompletion>
      <onCompletion onFailureOnly="true">
        <log message="onFailureOnly thread: ${threadName}"/>
        <to uri="mock:failed"/>
      </onCompletion>
      <log message="Original thread: ${threadName}"/>
      <choice>
        <when>
          <simple>${body} contains 'explode'</simple>
          <throwException ref="illegalArgumentException"/>
        </when>
      </choice>
    </route>

    <route>
      <from uri="direct:global"/>
      <log message="Original thread: ${threadName}"/>
      <choice>
        <when>
          <simple>${body} contains 'explode'</simple>
          <throwException ref="illegalArgumentException"/>
        </when>
      </choice>
    </route>
  </camelContext>

</beans>
