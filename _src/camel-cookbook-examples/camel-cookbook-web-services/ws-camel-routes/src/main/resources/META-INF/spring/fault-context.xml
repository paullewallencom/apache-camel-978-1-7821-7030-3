<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright (C) Scott Cranton and Jakub Korab
  ~ https://github.com/CamelCookbook
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

  <cxf:cxfEndpoint id="paymentServiceEndpoint"
                   address="http://localhost:${port1}/paymentFaultService"
                   serviceClass="org.camelcookbook.ws.payment_service.Payment"/>

  <bean id="paymentServiceImpl" class="org.camelcookbook.ws.fault.PaymentServiceImpl"/>

  <bean id="faultHandler" class="org.camelcookbook.ws.fault.FaultHandler"/>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <route id="wsRoute">
      <from uri="cxf:bean:paymentServiceEndpoint"/>
      <onException>
        <exception>org.camelcookbook.ws.fault.TransferException</exception>
        <handled>
          <constant>true</constant>
        </handled>
        <setFaultBody>
          <method ref="faultHandler" method="createFault"/>
        </setFaultBody>
      </onException>
      <transform>
        <simple>${in.body[0]}</simple>
      </transform>
      <log message="request = ${body}"/>
      <bean ref="paymentServiceImpl"/>
      <log message="response = ${body}"/>
    </route>
  </camelContext>

</beans>